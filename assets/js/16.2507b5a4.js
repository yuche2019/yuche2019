(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{687:function(a,v,_){"use strict";_.r(v);var t=_(41),s=Object(t.a)({},(function(){var a=this,v=a.$createElement,_=a._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"javascript位运算指南"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javascript位运算指南"}},[a._v("#")]),a._v(" JavaScript位运算指南")]),a._v(" "),_("h1",{attrs:{id:"位运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[a._v("#")]),a._v(" 位运算")]),a._v(" "),_("h2",{attrs:{id:"背景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),_("p",[a._v("为什么要做js位运算呢？")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("因为最近在学习hash算法，里面用到了大量的位运算")])]),a._v(" "),_("li",[_("p",[a._v("另外网上也找了很多资料，但大都比较片面，没有说明特殊情况时的处理，换几组数据计算结果就出错。")])])]),a._v(" "),_("h2",{attrs:{id:"重温整数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重温整数"}},[a._v("#")]),a._v(" 重温整数")]),a._v(" "),_("p",[a._v("ECMAScript 整数有两种类型，即：")]),a._v(" "),_("ul",[_("li",[a._v("有符号整数（允许用正数和负数）")]),a._v(" "),_("li",[a._v("无符号整数（只允许用正数） 在 ECMAScript 中，所有整数字面量默认都是有符号整数，这意味着什么呢？")])]),a._v(" "),_("p",[a._v("有符号整数使用 31 位表示整数的数值，用第 32 位表示整数的符号，0 表示正数，1 表示负数。")]),a._v(" "),_("p",[a._v("数值范围从 -2147483647 到 2147483647。")]),a._v(" "),_("p",[_("strong",[a._v("位运算会把二进制数限制在32位，超出部分会被舍弃")])]),a._v(" "),_("h2",{attrs:{id:"调试位运算常用的几个方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#调试位运算常用的几个方法"}},[a._v("#")]),a._v(" 调试位运算常用的几个方法")]),a._v(" "),_("h3",{attrs:{id:"tostring-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tostring-2"}},[a._v("#")]),a._v(" toString(2)")]),a._v(" "),_("p",[a._v("转换成2进制字符串")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("var a = 1732584193;\na.toString(2); // 1100111010001010010001100000001\n")])])]),_("h3",{attrs:{id:"parseint-11001-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#parseint-11001-2"}},[a._v("#")]),a._v(" parseInt('11001', 2)")]),a._v(" "),_("p",[a._v("将2进制字符串转换成10进制数")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("parseInt('11001', 2) // 25\n")])])]),_("h3",{attrs:{id:"padstart-32-0"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#padstart-32-0"}},[a._v("#")]),a._v(" padStart(32, '0')")]),a._v(" "),_("p",[a._v("字符串总长度，左边不足位数补0")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("'1100000001'.padStart(32, 0) // 00000000000000000000001100000001\n")])])]),_("h2",{attrs:{id:"源码、反码、补码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#源码、反码、补码"}},[a._v("#")]),a._v(" 源码、反码、补码")]),a._v(" "),_("h3",{attrs:{id:"源码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[a._v("#")]),a._v(" 源码")]),a._v(" "),_("p",[a._v("将数字转换成的2进制数, 最左边表示符号位，1负数，0正数")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("5 源码： 0101\n-10 源码：11010\n")])])]),_("h3",{attrs:{id:"反码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#反码"}},[a._v("#")]),a._v(" 反码")]),a._v(" "),_("p",[a._v("正数的反码与其原码相同")]),a._v(" "),_("p",[a._v("负数的反码，除符号位外，其他位取反")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("5 \n源码：0101 \n反码：0101\n\n-10\n源码：11010 \n反码：10101\n")])])]),_("h3",{attrs:{id:"补码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#补码"}},[a._v("#")]),a._v(" 补码")]),a._v(" "),_("p",[a._v("正整数的补码与其原码相同")]),a._v(" "),_("p",[a._v("负整数的补码，取反码+1")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("5\n源码：0101\n补码：0101\n\n-10\n源码：11010\n补码：10110\n")])])]),_("p",[a._v("ok，现在开始正题")]),a._v(" "),_("h1",{attrs:{id:"位运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[a._v("#")]),a._v(" 位运算符")]),a._v(" "),_("ul",[_("li",[a._v("非（~）")]),a._v(" "),_("li",[a._v("与（&）")]),a._v(" "),_("li",[a._v("或（|）")]),a._v(" "),_("li",[a._v("异或（^）")]),a._v(" "),_("li",[a._v("带符号左移（<<）")]),a._v(" "),_("li",[a._v("带符号右移（>>）")]),a._v(" "),_("li",[a._v("无符号右移（>>>）")])]),a._v(" "),_("h2",{attrs:{id:"位运算符-非"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符-非"}},[a._v("#")]),a._v(" 位运算符：非（~）")]),a._v(" "),_("p",[a._v("运算步骤：")]),a._v(" "),_("ol",[_("li",[_("p",[a._v("将该数字取负数")])]),a._v(" "),_("li",[_("p",[a._v("然后减1")]),a._v(" "),_("p",[a._v("~25 // -26")])])]),a._v(" "),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("25取负：-25")])]),a._v(" "),_("li",[_("p",[a._v("减1：-26")]),a._v(" "),_("p",[a._v("~1  // -2\n~-1 // 0\n~100 // -101\n~-100 // 99")])])]),a._v(" "),_("h2",{attrs:{id:"位运算符-与"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符-与"}},[a._v("#")]),a._v(" 位运算符：与（&）")]),a._v(" "),_("p",[a._v("运算步骤：")]),a._v(" "),_("ol",[_("li",[a._v("把两个数转换成2进制补码")]),a._v(" "),_("li",[a._v("相同位置进行比较（同为1，结果为1，否则为0）")]),a._v(" "),_("li",[a._v("如果计算结果是负数，还要再做补码处理")])]),a._v(" "),_("p",[a._v("如果位数不够，正数左边补0，负数补1")]),a._v(" "),_("h3",{attrs:{id:"正正运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正正运算"}},[a._v("#")]),a._v(" 正正运算")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("10 & 3 // 2\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("10 补码：1010")]),a._v(" "),_("li",[a._v("3 补码： 0011")]),a._v(" "),_("li",[a._v("结果：0010，即 2")])]),a._v(" "),_("h3",{attrs:{id:"正负运算-1"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正负运算-1"}},[a._v("#")]),a._v(" 正负运算（1）")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("14 & -13 // 2\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("14 补码：01110（补一位符号位）")]),a._v(" "),_("li",[a._v("-13 源码：11101，补码：10011")]),a._v(" "),_("li",[a._v("与运算：00010，即 2")])]),a._v(" "),_("h3",{attrs:{id:"正负运算-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正负运算-2"}},[a._v("#")]),a._v(" 正负运算（2）")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("88 & -19 // 72\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("88 补码：01011000（补一位符号位）")]),a._v(" "),_("li",[a._v("-19 源码：110011，补码：101100")]),a._v(" "),_("li",[a._v("01011000 & 101100")]),a._v(" "),_("li",[a._v("负数（101100）位数不够，左边补1，即11101100")]),a._v(" "),_("li",[a._v("也就是 01011000 & 11101100")]),a._v(" "),_("li",[a._v("结果为：01001000，即：72")])]),a._v(" "),_("h3",{attrs:{id:"负负运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负负运算"}},[a._v("#")]),a._v(" 负负运算")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-12 & -5 // -16\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("-12 补码：10100")]),a._v(" "),_("li",[a._v("-5 补码： 11011")]),a._v(" "),_("li",[a._v("与运算： 10000")]),a._v(" "),_("li",[a._v("结果为负，再取一次补码: 110000： -16")])]),a._v(" "),_("h3",{attrs:{id:"练习"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[a._v("#")]),a._v(" 练习")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("3 & 7\n-21 & 16\n-271733879 & -1732584194\n1125899778533470 & 812930\n20 & 0xF\n48192342 & 0xFFFF\n")])])]),_("h2",{attrs:{id:"位运算符-或"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符-或"}},[a._v("#")]),a._v(" 位运算符：或（|）")]),a._v(" "),_("p",[a._v("运算步骤：")]),a._v(" "),_("ol",[_("li",[a._v("把两个数字转换成2进制补码")]),a._v(" "),_("li",[a._v("相同位置进行比较（有一个是1，结果即为1）")]),a._v(" "),_("li",[a._v("如果计算结果是负数，还要再做补码处理")])]),a._v(" "),_("h3",{attrs:{id:"正正运算-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正正运算-2"}},[a._v("#")]),a._v(" 正正运算")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("10 | 3 // 11\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("10 源码：1010")]),a._v(" "),_("li",[a._v("3 源码：0011")]),a._v(" "),_("li",[a._v("结果：1011，即 11")])]),a._v(" "),_("h3",{attrs:{id:"正负运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正负运算"}},[a._v("#")]),a._v(" 正负运算")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("10 | -3 // -1\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("10补码：01010")]),a._v(" "),_("li",[a._v("-3补码：11101")]),a._v(" "),_("li",[a._v("或运算：11111")]),a._v(" "),_("li",[a._v("结果为负，再取码：10001，即：-1")])]),a._v(" "),_("h3",{attrs:{id:"负负运算-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负负运算-2"}},[a._v("#")]),a._v(" 负负运算")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-15 | -21 // -5\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("-15 补码：110001")]),a._v(" "),_("li",[a._v("-21 补码：101011")]),a._v(" "),_("li",[a._v("或运算：111011")]),a._v(" "),_("li",[a._v("结果为负再取补码：10101，即：-5")])]),a._v(" "),_("h4",{attrs:{id:"练习-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#练习-2"}},[a._v("#")]),a._v(" 练习")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("15 | 20\n40 | -14\n-271733879 | 1732584193\n(-271733879 & -1732584194) | (~-271733879 & 271733878)\n")])])]),_("h2",{attrs:{id:"位运算符-异或"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符-异或"}},[a._v("#")]),a._v(" 位运算符：异或（^）")]),a._v(" "),_("p",[a._v("运算步骤：")]),a._v(" "),_("ol",[_("li",[a._v("把两个数转换成2进制补码")]),a._v(" "),_("li",[a._v("相同位置进行比较（必须是0和1或者1和0，结果才为1）")]),a._v(" "),_("li",[a._v("如果结果为负，再取补码")])]),a._v(" "),_("h3",{attrs:{id:"正正异或"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正正异或"}},[a._v("#")]),a._v(" 正正异或")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("10 ^ 3 // 9\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("10 补码：1010")]),a._v(" "),_("li",[a._v("3 补码：0011")]),a._v(" "),_("li",[a._v("结果：1001，即 9")])]),a._v(" "),_("h3",{attrs:{id:"正负异或"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正负异或"}},[a._v("#")]),a._v(" 正负异或")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("10 ^ -3 // -9\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("10 补码: 01010")]),a._v(" "),_("li",[a._v("-3 补码：11101")]),a._v(" "),_("li",[a._v("异或运算：10111")]),a._v(" "),_("li",[a._v("结果为负，再取补码：11001，即-9")])]),a._v(" "),_("h3",{attrs:{id:"负负异或"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负负异或"}},[a._v("#")]),a._v(" 负负异或")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-10 ^ -3 // 11\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("-10 补码：10110")]),a._v(" "),_("li",[a._v("-3 补码：11101")]),a._v(" "),_("li",[a._v("异或运算：01011，即：11")])]),a._v(" "),_("h3",{attrs:{id:"练习-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#练习-3"}},[a._v("#")]),a._v(" 练习")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("5 ^ 8\n-10 ^ 9\n-13 ^ -20\n-271733879 ^ -1732584194 ^ 271733878\n")])])]),_("h2",{attrs:{id:"位运算符-带符号左移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符-带符号左移"}},[a._v("#")]),a._v(" 位运算符：带符号左移（<<）")]),a._v(" "),_("p",[a._v("运算步骤：")]),a._v(" "),_("ol",[_("li",[a._v("把数字转换成2进制补码")]),a._v(" "),_("li",[a._v("左移指定位数，右边补0")]),a._v(" "),_("li",[a._v("如果结果未负数，再取补码")])]),a._v(" "),_("p",[a._v("超过32位的部分舍弃")]),a._v(" "),_("h3",{attrs:{id:"正数左移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正数左移"}},[a._v("#")]),a._v(" 正数左移")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("1 << 2 // 补码：00000001 左移2位, 即 00000100，结果为：4\n5 << 3 // 补码：00000101 左移3位, 即 00101000，结果为：40 \n")])])]),_("p",[a._v("可以看出，"),_("strong",[a._v("正数带符号左移，即 a << n，其实是 a * 2的n次幂")])]),a._v(" "),_("h3",{attrs:{id:"负数左移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负数左移"}},[a._v("#")]),a._v(" 负数左移")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-3 << 4\n")])])]),_("ul",[_("li",[_("p",[a._v("-3 补码：101")])]),a._v(" "),_("li",[_("p",[a._v("左移4位 1010000")])]),a._v(" "),_("li",[_("p",[a._v("标志位为负，取补码：1110000，即-48")]),a._v(" "),_("p",[a._v("-6 << 3  // 1010 << 3 等于 1010000，取补码，1110000 即：-48\n-11 << 4 // 10101 << 4 等于 101010000，取补码，110110000 即：-176")])])]),a._v(" "),_("h3",{attrs:{id:"边缘情况"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#边缘情况"}},[a._v("#")]),a._v(" 边缘情况")]),a._v(" "),_("h4",{attrs:{id:"情况1-正数变负数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#情况1-正数变负数"}},[a._v("#")]),a._v(" 情况1：正数变负数")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("1732584193 << 2  // -1659597820\n")])])]),_("p",[a._v("计算过程")]),a._v(" "),_("ul",[_("li",[a._v("1732584193转换成2进制源码：1100111010001010010001100000001（31位）")]),a._v(" "),_("li",[a._v("左移2位，补2个0：110011101000101001000110000000100（33位）")]),a._v(" "),_("li",[a._v("移除左边多余的1位：10011101000101001000110000000100（32位）")]),a._v(" "),_("li",[a._v("变为负数，取补码：11100010111010110111001111111100")]),a._v(" "),_("li",[a._v("即：-1659597820")])]),a._v(" "),_("h4",{attrs:{id:"情况2-负数变正数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#情况2-负数变正数"}},[a._v("#")]),a._v(" 情况2：负数变正数")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-1732584193 << 2  // 1659597820\n")])])]),_("p",[a._v("计算过程")]),a._v(" "),_("ul",[_("li",[a._v("-1732584193转换成2进制：11100111010001010010001100000001（32位）")]),a._v(" "),_("li",[a._v("负数，取补码：10011000101110101101110011111111（32位）")]),a._v(" "),_("li",[a._v("左移2位：1001100010111010110111001111111100（34位）")]),a._v(" "),_("li",[a._v("多余部分舍弃：01100010111010110111001111111100（32位）")]),a._v(" "),_("li",[a._v("符号位为正，无需再补码，即：1659597820")])]),a._v(" "),_("h4",{attrs:{id:"练习-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#练习-4"}},[a._v("#")]),a._v(" 练习")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("1 << 32 \n1 << 33 \n1 << 40\n2147483648 << 2\n1732584193 << 6\n")])])]),_("h2",{attrs:{id:"位运算符-带符号右移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符-带符号右移"}},[a._v("#")]),a._v(" 位运算符：带符号右移（>>）")]),a._v(" "),_("p",[a._v("运算步骤：")]),a._v(" "),_("ol",[_("li",[a._v("取数字二进制补码")]),a._v(" "),_("li",[a._v("右移指定位数，左边补位与符号位一致")]),a._v(" "),_("li",[a._v("多余位被舍弃")]),a._v(" "),_("li",[a._v("如果计算结果为负，再取补码")])]),a._v(" "),_("h4",{attrs:{id:"正数右移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正数右移"}},[a._v("#")]),a._v(" 正数右移")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("5 >> 1 // 0101 右移1位 0010，即 2\n1 >> 2 // 0001 右移1位 0000，即 0\n")])])]),_("p",[a._v("正数右移比较简单，移出的内容直接舍弃即可，左边用0补充")]),a._v(" "),_("h4",{attrs:{id:"负数右移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负数右移"}},[a._v("#")]),a._v(" 负数右移")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-5 >> 2 // -2\n")])])]),_("p",[a._v("分析：")]),a._v(" "),_("ul",[_("li",[a._v("-5 补码：1011")]),a._v(" "),_("li",[a._v("右移2位：1110")]),a._v(" "),_("li",[a._v("结果为负，取补码：1010，即-2")])]),a._v(" "),_("h4",{attrs:{id:"练习-5"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#练习-5"}},[a._v("#")]),a._v(" 练习")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("5 + 64 >> 9\n1732584193 >> 4\n")])])]),_("h2",{attrs:{id:"位运算符-无符号右移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位运算符-无符号右移"}},[a._v("#")]),a._v(" 位运算符：无符号右移（>>>）")]),a._v(" "),_("p",[a._v("运算步骤：")]),a._v(" "),_("ol",[_("li",[a._v("把数字转换成32位2进制补码")]),a._v(" "),_("li",[a._v("连同符号位，右移动指定的位数")]),a._v(" "),_("li",[a._v("向右被移出的位被丢弃，左侧用0填充")])]),a._v(" "),_("p",[a._v("因为符号位变成了 0，所以结果总是正的")]),a._v(" "),_("h3",{attrs:{id:"正数右移-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正数右移-2"}},[a._v("#")]),a._v(" 正数右移")]),a._v(" "),_("p",[a._v("正数时候 >> 和 >>> 结果是一样的")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("5 >> 2 // 101 右移2位 001 即：1\n5 >>> 2 // 101 右移2位 001 即：1\n")])])]),_("h3",{attrs:{id:"负数右移-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负数右移-2"}},[a._v("#")]),a._v(" 负数右移")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-5 >>> 2 // 1073741822\n")])])]),_("p",[a._v("过程：")]),a._v(" "),_("ul",[_("li",[a._v("-5 源码: 10000000 00000000 00000000 00000101")]),a._v(" "),_("li",[a._v("补码：11111111 11111111 11111111 11111011")]),a._v(" "),_("li",[a._v("右移两位：00111111 11111111 11111111 11111110")]),a._v(" "),_("li",[a._v("转换成十进制即为：1073741822")])]),a._v(" "),_("blockquote",[_("p",[a._v("问题：为什么这个要补满32位，而之前的运算都没有？")])]),a._v(" "),_("p",[a._v("因为之前的运算，正数补的都是0，负数虽然补1，但计算后要做补码，补位的数最终不影响计算")]),a._v(" "),_("p",[a._v("而无符号右移，则会影响运算。所以需要补全")]),a._v(" "),_("h4",{attrs:{id:"练习-6"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#练习-6"}},[a._v("#")]),a._v(" 练习")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("-23 >>> 2\n45678765 >>> 31\n")])])]),_("h2",{attrs:{id:"关于位运算的核心思路"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关于位运算的核心思路"}},[a._v("#")]),a._v(" 关于位运算的核心思路")]),a._v(" "),_("ul",[_("li",[a._v("运算前要取补码")]),a._v(" "),_("li",[a._v("运算结果导致负数，再取一次补码")])]),a._v(" "),_("p",[a._v("以上内容都是个人收集、以及多次尝试整理的。")]),a._v(" "),_("p",[a._v("因为网上看到的很多文章计算方式都不对，虽然举的例子没问题，但几组数字就计算错误。")]),a._v(" "),_("p",[a._v("特此整理了该篇文章，与大家共同学习")])])}),[],!1,null,null,null);v.default=s.exports}}]);